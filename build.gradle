plugins {
    id("org.springframework.boot") version "2.1.9.RELEASE"
    id("org.hidetake.ssh") version "2.9.0"//远程传输文件
    id("java")
}

apply from: 'dependencies.gradle'


// 所有模块/项目的通用配置
allprojects {
    group 'com.licc.platform'
    version '1.0-SNAPSHOT'
    apply plugin: 'idea'
    apply plugin: 'java'

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    task hello { task -> println "I'm $task.project.name" }

//项目部署远程配置                                //
    remotes {
        server {
            host = '192.168.10.36'
            user = 'rayeye'
            // password 和 identity 只用其中一个
            password = 'ww2233ee'
            //identity = file("${System.properties['user.home']}/.ssh/id_rsa")
        }
    }
}


// 子模块/项目的统一配置
subprojects {
    // spring统一依赖管理
    apply plugin: 'io.spring.dependency-management'
    /* 注意gradle插件不再自动应用，所以这里需要指定 */
    apply plugin: 'org.springframework.boot'
    /* 依赖管理插件仍然是一个spring-boot-gradle-plugin传递依赖，所以无需在build.gradle配置中明确列出此依赖。 */
    dependencyManagement {
        imports {
            // 解决cloud零散jar的版本问题
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2"
        }
    }

    jar.enabled = true
/* 需要org.springframework.boot插件 不需要打包成可执行的jar*/
    bootJar.enabled = true

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    dependencies {

        implementation libraries['spring-boot-starter']
        implementation libraries['spring-boot-starter-web']
        implementation libraries['spring-boot-starter-log4j2']
        implementation libraries['disruptor']
        implementation libraries['fastjson']
        implementation libraries['commons-lang3']

        implementation libraries['lombok']
        annotationProcessor libraries['lombok']


        testImplementation libraries['lombok']
        testAnnotationProcessor libraries['lombok']
        testImplementation libraries['spring-boot-starter-test']
        testImplementation libraries['junit']

    }
    configurations {
        //移除spring boot 默认logger依赖
        all*.exclude module: 'spring-boot-starter-logging'
        all*.exclude module: 'jcl-over-slf4j'
        all*.exclude module: 'logback-classic'
    }
}


